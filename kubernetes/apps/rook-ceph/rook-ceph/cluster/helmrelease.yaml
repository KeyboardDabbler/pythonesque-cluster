---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: *app
      version: v1.14.8
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # Values link: https://github.com/rook/rook/blob/release-1.14/deploy/charts/rook-ceph-cluster/values.yaml
  values:
    toolbox:
      enabled: false
    monitoring:
      enabled: true
      createPrometheusRules: true
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
    ingress:
      dashboard:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.pythonesque.io
        ingressClassName: internal
        host:
          name: rook.pythonesque.io
          path: /
    cephClusterSpec:
      mgr:
        modules:
          - name: pg_autoscaler
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: black-knight-01
            devices:
              - name: "/dev/disk/by-id/nvme-CT4000P3PSSD8_2343E8820D38"
          - name: black-knight-02
            devices:
              - name: "/dev/disk/by-id/nvme-CT4000P3PSSD8_2343E8820E16"
          - name: black-knight-03
            devices:
              - name: "/dev/disk/by-id/nvme-CT4000P3PSSD8_2343E8820CF9"
      placement:
        mgr: &placement
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mon: *placement
      resources:
        mgr:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            memory: "1Gi"
        mon:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            memory: "1Gi"
        osd:
          requests:
            cpu: "100m"
            memory: "2Gi"
          limits:
            memory: "4Gi"
        mgr-sidecar:
          requests:
            cpu: "250m"
            memory: "40Mi"
          limits:
            memory: "100Mi"
        crashcollector:
          requests:
            cpu: "15m"
            memory: "60Mi"
          limits:
            memory: "60Mi"
        logcollector:
          requests:
            cpu: "15m"
            memory: "60Mi"
          limits:
            memory: "60Mi"
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: false
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Retain
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: false
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []
