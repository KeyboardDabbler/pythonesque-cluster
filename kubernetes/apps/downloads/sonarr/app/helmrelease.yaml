# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/drag0n141/sonarr
              tag: 4.0.10.2544@sha256:9e65f05b469ee98c5e8f409a1fd1804756774232baa31d9629ba7505a37ccf34
            env:
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
            envFrom:
              - secretRef:
                  name: sonarr-secret
              - secretRef:
                  name: sonarr-db-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Sonarr
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.downloads.svc.cluster.local:8989
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN_LOCAL}
        hosts:
        - host: "{{ .Release.Name }}.${SECRET_DOMAIN_LOCAL}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: sonarr-config
      add-ons:
        type: emptyDir
      tmp:
        type: emptyDir
      downloads:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/local/downloads/
        globalMounts:
        - path: /gbs/downloads
      comicbook:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-comicbook/
        globalMounts:
        - path: /gbs/shows/tv-comicbook
      documentary:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-documentary/
        globalMounts:
        - path: /gbs/shows/tv-documentary
      emergency:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-emergency/
        globalMounts:
        - path: /gbs/shows/tv-emergency
      kids:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-kids/
        globalMounts:
        - path: /gbs/shows/tv-kids
      programs:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-programs/
        globalMounts:
        - path: /gbs/shows/tv-programs
      shows:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/tv-shows/
        globalMounts:
        - path: /gbs/shows/tv-shows
