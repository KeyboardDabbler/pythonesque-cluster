# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  - name: volsync
    namespace: storage
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.3@sha256:303db842941794b10469ba22124fd76cdc057fdaa85b3e8e6ff7422809092153
            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.downloads,
                sabnzbd.downloads.svc,
                sabnzbd.downloads.svc.cluster,
                sabnzbd.downloads.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN_LOCAL}
            envFrom:
            - secretRef:
                name: sabnzbd-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 12Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: SABnzbd
          gethomepage.dev/icon: sabnzbd.png
          gethomepage.dev/description: NZB Download Client
          gethomepage.dev/widget.type: sabnzbd
          gethomepage.dev/widget.url: http://sabnzbd.downloads.svc.cluster.local:8080
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SABNZBD_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN_LOCAL}
        hosts:
        - host: "{{ .Release.Name }}.${SECRET_DOMAIN_LOCAL}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: sabnzbd-config
      tmp:
        type: emptyDir
      downloads:
        type: nfs
        server: ${HOLY_GRAIL_ADDR}
        path: /mnt/user/local/downloads/
        globalMounts:
        - path: /gbs/downloads
      incomplete:
        type: emptyDir
      scripts:
        type: configMap
        name: sabnzbd-configmap
        defaultMode: 0555
        globalMounts:
          - path: /config/scripts/replace_for.py
            subPath: replace_for.py
            readOnly: true
          - path: /config/scripts/clean.py
            subPath: clean.py
            readOnly: true
