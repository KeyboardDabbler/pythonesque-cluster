---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: [10000]
          terminationGracePeriodSeconds: 300
        containers:
          app:
            nameOverride: qbittorrent
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.0@sha256:3b58f98fa5e49a6a4c63b4c65c2fdabb8d32d89a1aa61f090e02b5453a1dbe8d
            env:
              TZ: ${TIMEZONE}
              QBT_WEBUI_PORT: &port 80
              QBT_Preferences__WebUI__AlternativeUIEnabled: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                10.69.0.0/16, 192.168.0.0/16
              QBT_Preferences__WebUI__LocalHostAuth: false
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 49m
                memory: 1024Mi
              limits:
                memory: 8192Mi
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: latest@sha256:0693c569da031f2248f65d8fc673db775dd141c5d5fe93b0c45899f04b551724
            env:
              DNS_ADDRESS: "10.2.0.1"
              VPN_SERVICE_PROVIDER: custom
              VPN_TYPE: wireguard
              VPN_INTERFACE: wg0
              WIREGUARD_ENDPOINT_PORT: 51820
              VPN_PORT_FORWARDING: on
              VPN_PORT_FORWARDING_PROVIDER: protonvpn
              FIREWALL_INPUT_PORTS: 80
              FIREWALL_OUTBOUND_SUBNETS: 10.96.0.0/12,10.69.0.0/16 # Allow access to k8s subnets
            envFrom:
              - secretRef:
                  name: qbittorrent-secret
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
              allowPrivilegeEscalation: false
          port-forward:
            image:
              repository: ghcr.io/bjw-s-labs/gluetun-qb-port-sync
              tag: 0.0.2@sha256:3b97aaa6ff52037a4f9150ea3bb27ff949a1e1afd1044dcff0db3e9e56f807e4
            env:
              GLUETUN_CONTROL_SERVER_HOST: localhost
              GLUETUN_CONTROL_SERVER_PORT: 8000
              QBITTORRENT_HOST: localhost
              QBITTORRENT_WEBUI_PORT: *port
              CRON_ENABLED: true
              CRON_SCHEDULE: "*/5 * * * *"
              LOG_TIMESTAMP: false
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/description: Torrent Client
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: http://qbittorrent.downloads.svc.cluster.local:80
          gethomepage.dev/widget.username: "{{ `{{HOMEPAGE_VAR_QBITTORRENT_USERNAME}}` }}"
          gethomepage.dev/widget.password: "{{ `{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN_LOCAL}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_LOCAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
        advancedMounts:
          qbittorrent:
            app:
              - path: /config
      empty-config:
        type: emptyDir
        advancedMounts:
          qbittorrent:
            port-forward:
              - path: /config
      downloads:
        type: nfs
        server: ${HOLY_GRAIL_SERVER}
        path: /mnt/user/local/downloads/
        advancedMounts:
          qbittorrent:
            app:
              - path: /gbs/downloads
